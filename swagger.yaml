openapi: 3.0.0
    paths:
      /users:
        post:
          operationId: UsersController_create
          parameters: []
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/CreateUserDto'
          responses:
            default:
              description: ''
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/UsersApiWrapper'
          tags:
            - users
        get:
          operationId: UsersController_findAll
          parameters: []
          responses:
            default:
              description: ''
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/UsersApiWrapper'
          tags:
            - users
      /users/{id}:
        get:
          operationId: UsersController_findOne
          parameters:
            - name: id
              required: true
              in: path
              schema:
                type: string
          responses:
            default:
              description: ''
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/UserApiWrapper'
          tags:
            - users
        patch:
          operationId: UsersController_update
          parameters:
            - name: id
              required: true
              in: path
              schema:
                type: string
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UpdateUserDto'
          responses:
            default:
              description: ''
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/UserApiWrapper'
          tags:
            - users
        delete:
          operationId: UsersController_remove
          parameters:
            - name: id
              required: true
              in: path
              schema:
                type: string
          responses:
            default:
              description: ''
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/UserApiWrapper'
          tags:
            - users
      /orders:
        post:
          operationId: OrdersController_create
          parameters: []
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/CreateOrderDto'
          responses:
            default:
              description: ''
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/OrderApiWrapper'
          tags:
            - orders
        get:
          operationId: OrdersController_findAll
          parameters: []
          responses:
            default:
              description: ''
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/OrdersApiWrapper'
          tags:
            - orders
      /orders/{id}:
        get:
          operationId: OrdersController_findOne
          parameters:
            - name: id
              required: true
              in: path
              schema:
                type: string
          responses:
            default:
              description: ''
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/OrderApiWrapper'
          tags:
            - orders
        patch:
          operationId: OrdersController_update
          parameters:
            - name: id
              required: true
              in: path
              schema:
                type: string
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UpdateOrderDto'
          responses:
            default:
              description: ''
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/OrderApiWrapper'
          tags:
            - orders
        delete:
          operationId: OrdersController_remove
          parameters:
            - name: id
              required: true
              in: path
              schema:
                type: string
          responses:
            default:
              description: ''
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/OrderApiWrapper'
          tags:
            - orders
      /products:
        get:
          operationId: ProductsController_findAll
          parameters: []
          responses:
            default:
              description: ''
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/ProductsApiWrapper'
          tags:
            - products
      /products/{id}:
        get:
          operationId: ProductsController_findOne
          parameters:
            - name: id
              required: true
              in: path
              schema:
                type: string
          responses:
            default:
              description: ''
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/ProductApiWrapper'
          tags:
            - products
      /products/{id}/barcodes:
        get:
          operationId: ProductsController_findAllBarcodes
          parameters:
            - name: id
              required: true
              in: path
              schema:
                type: string
          responses:
            default:
              description: ''
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/BarcodesApiWrapper'
          tags:
            - products
      /products/{id}/barcodes/{barcode_id}:
        get:
          operationId: ProductsController_findOneBarcode
          parameters:
            - name: id
              required: true
              in: path
              schema:
                type: string
            - name: barcode_id
              required: true
              in: path
              schema:
                type: string
          responses:
            default:
              description: ''
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/BarcodeApiWrapper'
          tags:
            - products
      /products/colors:
        get:
          operationId: ProductsController_findAllColors
          parameters: []
          responses:
            default:
              description: ''
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/ColorsApiWrapper'
          tags:
            - products
      /products/sizes:
        get:
          operationId: ProductsController_findAllSizes
          parameters: []
          responses:
            default:
              description: ''
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/SizesApiWrapper'
          tags:
            - products
    info:
      title: Api example
      description: The Test task API description
      version: '1.0'
      contact: {}
    tags: []
    servers: []
    components:
      schemas:
        CreateUserDto:
          type: object
          properties:
            email:
              type: string
            name:
              type: string
            password:
              type: string
          required:
            - email
            - name
            - password
        User:
          type: object
          properties:
            id:
              type: number
            name:
              type: string
            email:
              type: string
            salt:
              type: string
            hash:
              type: string
            created_at:
              format: date-time
              type: string
            update_at:
              format: date-time
              type: string
          required:
            - id
            - name
            - email
            - salt
            - hash
            - created_at
            - update_at
        UsersApiWrapper:
          type: object
          properties:
            success:
              type: boolean
            results:
              type: array
              items:
                $ref: '#/components/schemas/User'
          required:
            - success
            - results
        UserApiWrapper:
          type: object
          properties:
            success:
              type: boolean
            results:
              $ref: '#/components/schemas/User'
          required:
            - success
            - results
        UpdateUserDto:
          type: object
          properties:
            email:
              type: string
            name:
              type: string
            password:
              type: string
        CreateOrderDto:
          type: object
          properties: {}
        Order:
          type: object
          properties:
            id:
              type: number
            user_id:
              type: number
            price:
              type: number
            discount:
              type: number
            status:
              type: string
            created_at:
              format: date-time
              type: string
            updated_at:
              format: date-time
              type: string
          required:
            - id
            - user_id
            - price
            - discount
            - status
            - created_at
            - updated_at
        OrderItem:
          type: object
          properties:
            id:
              type: number
            order_id:
              type: number
            title:
              type: string
            quantity:
              type: string
            size_title:
              type: string
            color_title:
              type: string
            price:
              type: number
            discount:
              type: number
            created_at:
              format: date-time
              type: string
            updated_at:
              format: date-time
              type: string
          required:
            - id
            - order_id
            - title
            - quantity
            - size_title
            - color_title
            - price
            - discount
            - created_at
            - updated_at
        FullOrderDescription:
          type: object
          properties:
            order:
              $ref: '#/components/schemas/Order'
            items:
              $ref: '#/components/schemas/OrderItem'
          required:
            - order
            - items
        OrderApiWrapper:
          type: object
          properties:
            success:
              type: boolean
            results:
              $ref: '#/components/schemas/FullOrderDescription'
          required:
            - success
            - results
        OrdersApiWrapper:
          type: object
          properties:
            success:
              type: boolean
            results:
              type: array
              items:
                $ref: '#/components/schemas/Order'
          required:
            - success
            - results
        UpdateOrderDto:
          type: object
          properties: {}
        Product:
          type: object
          properties:
            id:
              type: number
            price:
              type: number
            is_enable:
              type: boolean
            created_at:
              format: date-time
              type: string
            updated_at:
              format: date-time
              type: string
          required:
            - id
            - price
            - is_enable
            - created_at
            - updated_at
        ProductsApiWrapper:
          type: object
          properties:
            success:
              type: boolean
            results:
              type: array
              items:
                $ref: '#/components/schemas/Product'
          required:
            - success
            - results
        ProductApiWrapper:
          type: object
          properties:
            success:
              type: boolean
            results:
              $ref: '#/components/schemas/Product'
          required:
            - success
            - results
        Barcode:
          type: object
          properties:
            id:
              type: number
            product_id:
              type: number
            color_id:
              type: number
            size_id:
              type: number
            quantity:
              type: number
            created_at:
              format: date-time
              type: string
            updated_at:
              format: date-time
              type: string
          required:
            - id
            - product_id
            - color_id
            - size_id
            - quantity
            - created_at
            - updated_at
        BarcodesApiWrapper:
          type: object
          properties:
            success:
              type: boolean
            results:
              type: array
              items:
                $ref: '#/components/schemas/Barcode'
          required:
            - success
            - results
        BarcodeApiWrapper:
          type: object
          properties:
            success:
              type: boolean
            results:
              $ref: '#/components/schemas/Barcode'
          required:
            - success
            - results
        Color:
          type: object
          properties:
            id:
              type: number
            title:
              type: string
          required:
            - id
            - title
        ColorsApiWrapper:
          type: object
          properties:
            success:
              type: boolean
            results:
              type: array
              items:
                $ref: '#/components/schemas/Color'
          required:
            - success
            - results
        Size:
          type: object
          properties:
            id:
              type: number
            title:
              type: string
          required:
            - id
            - title
        SizesApiWrapper:
          type: object
          properties:
            success:
              type: boolean
            results:
              type: array
              items:
                $ref: '#/components/schemas/Size'
          required:
            - success
            - results